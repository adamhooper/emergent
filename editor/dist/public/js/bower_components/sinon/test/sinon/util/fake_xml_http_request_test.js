/**
 * @author Christian Johansen (christian@cjohansen.no)
 * @license BSD
 *
 * Copyright (c) 2010-2012 Christian Johansen
 */

(function(e){var t=e.XMLHttpRequest,n=e.ActiveXObject,r=function(){this.fakeXhr=sinon.useFakeXMLHttpRequest()},i=function(){typeof this.fakeXhr.restore=="function"&&this.fakeXhr.restore()},s=function(e,t){try{var n=sinon.xhr.workingXHR;sinon.xhr.workingXHR=e,t()}finally{sinon.xhr.workingXHR=n}};buster.testCase("sinon.FakeXMLHttpRequest",{tearDown:function(){delete sinon.FakeXMLHttpRequest.onCreate},"is constructor":function(){assert.isFunction(sinon.FakeXMLHttpRequest),assert.same(sinon.FakeXMLHttpRequest.prototype.constructor,sinon.FakeXMLHttpRequest)},"implements readyState constants":function(){assert.same(sinon.FakeXMLHttpRequest.OPENED,1),assert.same(sinon.FakeXMLHttpRequest.HEADERS_RECEIVED,2),assert.same(sinon.FakeXMLHttpRequest.LOADING,3),assert.same(sinon.FakeXMLHttpRequest.DONE,4)},"calls onCreate if listener is set":function(){var e=sinon.spy();sinon.FakeXMLHttpRequest.onCreate=e;var t=new sinon.FakeXMLHttpRequest;assert(e.called)},"passes new object to onCreate if set":function(){var e=sinon.spy();sinon.FakeXMLHttpRequest.onCreate=e;var t=new sinon.FakeXMLHttpRequest;assert.same(e.getCall(0).args[0],t)},withCredentials:{setUp:function(){this.xhr=new sinon.FakeXMLHttpRequest},"property is set if we support standards CORS":function(){assert.equals(sinon.xhr.supportsCORS,"withCredentials"in this.xhr)}},open:{setUp:function(){this.xhr=new sinon.FakeXMLHttpRequest},"is method":function(){assert.isFunction(this.xhr.open)},"sets properties on object":function(){this.xhr.open("GET","/my/url",!0,"cjno","pass"),assert.equals(this.xhr.method,"GET"),assert.equals(this.xhr.url,"/my/url"),assert.isTrue(this.xhr.async),assert.equals(this.xhr.username,"cjno"),assert.equals(this.xhr.password,"pass")},"is async by default":function(){this.xhr.open("GET","/my/url"),assert.isTrue(this.xhr.async)},"sets async to false":function(){this.xhr.open("GET","/my/url",!1),assert.isFalse(this.xhr.async)},"sets responseText to null":function(){this.xhr.open("GET","/my/url"),assert.isNull(this.xhr.responseText)},"sets requestHeaders to blank object":function(){this.xhr.open("GET","/my/url"),assert.isObject(this.xhr.requestHeaders),assert.equals(this.xhr.requestHeaders,{})},"sets readyState to OPENED":function(){this.xhr.open("GET","/my/url"),assert.same(this.xhr.readyState,sinon.FakeXMLHttpRequest.OPENED)},"sets send flag to false":function(){this.xhr.open("GET","/my/url"),assert.isFalse(this.xhr.sendFlag)},"dispatches onreadystatechange with reset state":function(){var e={};this.xhr.onreadystatechange=function(){sinon.extend(e,this)},this.xhr.open("GET","/my/url"),assert.equals(e.method,"GET"),assert.equals(e.url,"/my/url"),assert.isTrue(e.async),refute.defined(e.username),refute.defined(e.password),assert.isNull(e.responseText),refute.defined(e.responseHeaders),assert.equals(e.readyState,sinon.FakeXMLHttpRequest.OPENED),assert.isFalse(e.sendFlag)}},setRequestHeader:{setUp:function(){this.xhr=new sinon.FakeXMLHttpRequest,this.xhr.open("GET","/")},"throws exception if readyState is not OPENED":function(){var e=new sinon.FakeXMLHttpRequest;assert.exception(function(){e.setRequestHeader("X-EY","No-no")})},"throws exception if send flag is true":function(){var e=this.xhr;e.sendFlag=!0,assert.exception(function(){e.setRequestHeader("X-EY","No-no")})},"disallows unsafe headers":function(){var e=this.xhr;assert.exception(function(){e.setRequestHeader("Accept-Charset","")}),assert.exception(function(){e.setRequestHeader("Accept-Encoding","")}),assert.exception(function(){e.setRequestHeader("Connection","")}),assert.exception(function(){e.setRequestHeader("Content-Length","")}),assert.exception(function(){e.setRequestHeader("Cookie","")}),assert.exception(function(){e.setRequestHeader("Cookie2","")}),assert.exception(function(){e.setRequestHeader("Content-Transfer-Encoding","")}),assert.exception(function(){e.setRequestHeader("Date","")}),assert.exception(function(){e.setRequestHeader("Expect","")}),assert.exception(function(){e.setRequestHeader("Host","")}),assert.exception(function(){e.setRequestHeader("Keep-Alive","")}),assert.exception(function(){e.setRequestHeader("Referer","")}),assert.exception(function(){e.setRequestHeader("TE","")}),assert.exception(function(){e.setRequestHeader("Trailer","")}),assert.exception(function(){e.setRequestHeader("Transfer-Encoding","")}),assert.exception(function(){e.setRequestHeader("Upgrade","")}),assert.exception(function(){e.setRequestHeader("User-Agent","")}),assert.exception(function(){e.setRequestHeader("Via","")}),assert.exception(function(){e.setRequestHeader("Proxy-Oops","")}),assert.exception(function(){e.setRequestHeader("Sec-Oops","")})},"sets header and value":function(){this.xhr.setRequestHeader("X-Fake","Yeah!"),assert.equals(this.xhr.requestHeaders,{"X-Fake":"Yeah!"})},"appends same-named header values":function(){this.xhr.setRequestHeader("X-Fake","Oh"),this.xhr.setRequestHeader("X-Fake","yeah!"),assert.equals(this.xhr.requestHeaders,{"X-Fake":"Oh,yeah!"})}},send:{setUp:function(){this.xhr=new sinon.FakeXMLHttpRequest},"throws if request is not open":function(){var e=new sinon.FakeXMLHttpRequest;assert.exception(function(){e.send()})},"throws if send flag is true":function(){var e=this.xhr;e.open("GET","/"),e.sendFlag=!0,assert.exception(function(){e.send()})},"sets GET body to null":function(){this.xhr.open("GET","/"),this.xhr.send("Data"),assert.isNull(this.xhr.requestBody)},"sets HEAD body to null":function(){this.xhr.open("HEAD","/"),this.xhr.send("Data"),assert.isNull(this.xhr.requestBody)},"sets mime to text/plain":function(){this.xhr.open("POST","/"),this.xhr.send("Data"),assert.equals(this.xhr.requestHeaders["Content-Type"],"text/plain;charset=utf-8")},"does not override mime":function(){this.xhr.open("POST","/"),this.xhr.setRequestHeader("Content-Type","text/html"),this.xhr.send("Data"),assert.equals(this.xhr.requestHeaders["Content-Type"],"text/html;charset=utf-8")},"sets request body to string data":function(){this.xhr.open("POST","/"),this.xhr.send("Data"),assert.equals(this.xhr.requestBody,"Data")},"sets error flag to false":function(){this.xhr.open("POST","/"),this.xhr.send("Data"),assert.isFalse(this.xhr.errorFlag)},"sets send flag to true":function(){this.xhr.open("POST","/"),this.xhr.send("Data"),assert.isTrue(this.xhr.sendFlag)},"does not set send flag to true if sync":function(){this.xhr.open("POST","/",!1),this.xhr.send("Data"),assert.isFalse(this.xhr.sendFlag)},"dispatches onreadystatechange":function(){var e;this.xhr.open("POST","/",!1),this.xhr.onreadystatechange=function(){e=this.readyState},this.xhr.send("Data"),assert.equals(e,sinon.FakeXMLHttpRequest.OPENED)},"dispatches event using DOM Event interface":function(){var e=sinon.spy();this.xhr.open("POST","/",!1),this.xhr.addEventListener("readystatechange",e),this.xhr.send("Data"),assert(e.calledOnce),assert.equals(e.args[0][0].type,"readystatechange")},"dispatches onSend callback if set":function(){this.xhr.open("POST","/",!0);var e=sinon.spy();this.xhr.onSend=e,this.xhr.send("Data"),assert(e.called)},"dispatches onSend with request as argument":function(){this.xhr.open("POST","/",!0);var e=sinon.spy();this.xhr.onSend=e,this.xhr.send("Data"),assert(e.calledWith(this.xhr))},"dispatches onSend when async":function(){this.xhr.open("POST","/",!1);var e=sinon.spy();this.xhr.onSend=e,this.xhr.send("Data"),assert(e.calledWith(this.xhr))}},setResponseHeaders:{setUp:function(){this.xhr=new sinon.FakeXMLHttpRequest},"sets request headers":function(){var e={id:42};this.xhr.open("GET","/"),this.xhr.send(),this.xhr.setResponseHeaders(e),assert.equals(this.xhr.responseHeaders,e)},"calls readyStateChange with HEADERS_RECEIVED":function(){var e={id:42};this.xhr.open("GET","/"),this.xhr.send();var t=this.xhr.readyStateChange=sinon.spy();this.xhr.setResponseHeaders(e),assert(t.calledWith(sinon.FakeXMLHttpRequest.HEADERS_RECEIVED))},"does not call readyStateChange if sync":function(){var e={id:42};this.xhr.open("GET","/",!1),this.xhr.send();var t=this.xhr.readyStateChange=sinon.spy();this.xhr.setResponseHeaders(e),assert.isFalse(t.called)},"changes readyState to HEADERS_RECEIVED if sync":function(){var e={id:42};this.xhr.open("GET","/",!1),this.xhr.send(),this.xhr.setResponseHeaders(e),assert.equals(this.xhr.readyState,sinon.FakeXMLHttpRequest.HEADERS_RECEIVED)},"throws if headers were already set":function(){var e=this.xhr;e.open("GET","/",!1),e.send(),e.setResponseHeaders({}),assert.exception(function(){e.setResponseHeaders({})})}},setResponseBodyAsync:{setUp:function(){this.xhr=new sinon.FakeXMLHttpRequest,this.xhr.open("GET","/"),this.xhr.send(),this.xhr.setResponseHeaders({})},"invokes onreadystatechange handler with LOADING state":function(){var e=sinon.spy();this.xhr.readyStateChange=e,this.xhr.setResponseBody("Some text goes in here ok?"),assert(e.calledWith(sinon.FakeXMLHttpRequest.LOADING))},"invokes onreadystatechange handler for each 10 byte chunk":function(){var e=sinon.spy();this.xhr.readyStateChange=e,this.xhr.chunkSize=10,this.xhr.setResponseBody("Some text goes in here ok?"),assert.equals(e.callCount,4)},"invokes onreadystatechange handler for each x byte chunk":function(){var e=sinon.spy();this.xhr.readyStateChange=e,this.xhr.chunkSize=20,this.xhr.setResponseBody("Some text goes in here ok?"),assert.equals(e.callCount,3)},"invokes onreadystatechange handler with partial data":function(){var e=[],t=sinon.spy(function(){e.push(this.responseText)});this.xhr.readyStateChange=t,this.xhr.chunkSize=9,this.xhr.setResponseBody("Some text goes in here ok?"),assert.equals(e[1],"Some text")},"calls onreadystatechange with DONE state":function(){var e=sinon.spy();this.xhr.readyStateChange=e,this.xhr.setResponseBody("Some text goes in here ok?"),assert(e.calledWith(sinon.FakeXMLHttpRequest.DONE))},"throws if not open":function(){var e=new sinon.FakeXMLHttpRequest;assert.exception(function(){e.setResponseBody("")})},"throws if no headers received":function(){var e=new sinon.FakeXMLHttpRequest;e.open("GET","/"),e.send(),assert.exception(function(){e.setResponseBody("")})},"throws if body was already sent":function(){var e=new sinon.FakeXMLHttpRequest;e.open("GET","/"),e.send(),e.setResponseHeaders({}),e.setResponseBody(""),assert.exception(function(){e.setResponseBody("")})},"throws if body is not a string":function(){var e=new sinon.FakeXMLHttpRequest;e.open("GET","/"),e.send(),e.setResponseHeaders({}),assert.exception(function(){e.setResponseBody({})},"InvalidBodyException")}},setResponseBodySync:{setUp:function(){this.xhr=new sinon.FakeXMLHttpRequest,this.xhr.open("GET","/",!1),this.xhr.send(),this.xhr.setResponseHeaders({})},"does not throw":function(){var e=this.xhr;refute.exception(function(){e.setResponseBody("")})},"sets readyState to DONE":function(){this.xhr.setResponseBody(""),assert.equals(this.xhr.readyState,sinon.FakeXMLHttpRequest.DONE)},"throws if responding to request twice":function(){var e=this.xhr;this.xhr.setResponseBody(""),assert.exception(function(){e.setResponseBody("")})},"does not call onreadystatechange for sync request":function(){var e=new sinon.FakeXMLHttpRequest,t=sinon.spy();e.onreadystatechange=t,e.open("GET","/",!1),e.send();var n=t.callCount;e.setResponseHeaders({}),e.setResponseBody(""),assert.equals(n-t.callCount,0)},"simulates synchronous request":function(){var e=new sinon.FakeXMLHttpRequest;e.onSend=function(){this.setResponseHeaders({}),this.setResponseBody("Oh yeah")},e.open("GET","/",!1),e.send(),assert.equals(e.responseText,"Oh yeah")}},respond:{setUp:function(){this.xhr=new sinon.FakeXMLHttpRequest,this.xhr.open("GET","/");var e=this.spy=sinon.spy();this.xhr.onreadystatechange=function(){this.readyState==4&&e.call(this)},this.xhr.send()},"fire onload event":function(){this.onload=this.spy,this.xhr.respond(200,{},""),assert.equals(this.spy.callCount,1)},"fire onload event with this set to the XHR object":function(e){var t=new sinon.FakeXMLHttpRequest;t.open("GET","/"),t.onload=function(){assert.same(this,t),e()},t.send(),t.respond(200,{},"")},"calls readystate handler with readyState DONE once":function(){this.xhr.respond(200,{},""),assert.equals(this.spy.callCount,1)},"defaults to status 200, no headers, and blank body":function(){this.xhr.respond(),assert.equals(this.xhr.status,200),assert.equals(this.xhr.getAllResponseHeaders(),""),assert.equals(this.xhr.responseText,"")},"sets status":function(){this.xhr.respond(201),assert.equals(this.xhr.status,201)},"sets status text":function(){this.xhr.respond(201),assert.equals(this.xhr.statusText,"Created")},"sets headers":function(){sinon.spy(this.xhr,"setResponseHeaders");var e={some:"header",value:"over here"};this.xhr.respond(200,e),assert.equals(this.xhr.setResponseHeaders.args[0][0],e)},"sets response text":function(){this.xhr.respond(200,{},"'tis some body text"),assert.equals(this.xhr.responseText,"'tis some body text")},"completes request when onreadystatechange fails":function(){this.xhr.onreadystatechange=sinon.stub().throws(),this.xhr.respond(200,{},"'tis some body text"),assert.equals(this.xhr.onreadystatechange.callCount,4)},"sets status before transitioning to readyState HEADERS_RECEIVED":function(){var e,t;this.xhr.onreadystatechange=function(){this.readyState==2&&(e=this.status,t=this.statusText)},this.xhr.respond(204),assert.equals(e,204),assert.equals(t,"No Content")}},getResponseHeader:{setUp:function(){this.xhr=new sinon.FakeXMLHttpRequest},"returns null if request is not finished":function(){this.xhr.open("GET","/"),assert.isNull(this.xhr.getResponseHeader("Content-Type"))},"returns null if header is Set-Cookie":function(){this.xhr.open("GET","/"),this.xhr.send(),assert.isNull(this.xhr.getResponseHeader("Set-Cookie"))},"returns null if header is Set-Cookie2":function(){this.xhr.open("GET","/"),this.xhr.send(),assert.isNull(this.xhr.getResponseHeader("Set-Cookie2"))},"returns header value":function(){this.xhr.open("GET","/"),this.xhr.send(),this.xhr.setResponseHeaders({"Content-Type":"text/html"}),assert.equals(this.xhr.getResponseHeader("Content-Type"),"text/html")},"returns header value if sync":function(){this.xhr.open("GET","/",!1),this.xhr.send(),this.xhr.setResponseHeaders({"Content-Type":"text/html"}),assert.equals(this.xhr.getResponseHeader("Content-Type"),"text/html")},"returns null if header is not set":function(){this.xhr.open("GET","/"),this.xhr.send(),assert.isNull(this.xhr.getResponseHeader("Content-Type"))},"returns headers case insensitive":function(){this.xhr.open("GET","/"),this.xhr.send(),this.xhr.setResponseHeaders({"Content-Type":"text/html"}),assert.equals(this.xhr.getResponseHeader("content-type"),"text/html")}},getAllResponseHeaders:{setUp:function(){this.xhr=new sinon.FakeXMLHttpRequest},"returns empty string if request is not finished":function(){this.xhr.open("GET","/"),assert.equals(this.xhr.getAllResponseHeaders(),"")},"does not return Set-Cookie and Set-Cookie2 headers":function(){this.xhr.open("GET","/"),this.xhr.send(),this.xhr.setResponseHeaders({"Set-Cookie":"Hey","Set-Cookie2":"There"}),assert.equals(this.xhr.getAllResponseHeaders(),"")},"returns headers":function(){this.xhr.open("GET","/"),this.xhr.send(),this.xhr.setResponseHeaders({"Content-Type":"text/html","Set-Cookie2":"There","Content-Length":"32"}),assert.equals(this.xhr.getAllResponseHeaders(),"Content-Type: text/html\r\nContent-Length: 32\r\n")},"returns headers if sync":function(){this.xhr.open("GET","/",!1),this.xhr.send(),this.xhr.setResponseHeaders({"Content-Type":"text/html","Set-Cookie2":"There","Content-Length":"32"}),assert.equals(this.xhr.getAllResponseHeaders(),"Content-Type: text/html\r\nContent-Length: 32\r\n")}},abort:{setUp:function(){this.xhr=new sinon.FakeXMLHttpRequest},"sets aborted flag to true":function(){this.xhr.aborted=!0,this.xhr.abort(),assert.isTrue(this.xhr.aborted)},"sets responseText to null":function(){this.xhr.responseText="Partial data",this.xhr.abort(),assert.isNull(this.xhr.responseText)},"sets errorFlag to true":function(){this.xhr.errorFlag=!0,this.xhr.abort(),assert.isTrue(this.xhr.errorFlag)},"fire onerror event":function(){var e=sinon.spy();this.xhr.onerror=e,this.xhr.abort(),assert.equals(e.callCount,1)},"nulls request headers":function(){this.xhr.open("GET","/"),this.xhr.setRequestHeader("X-Test","Sumptn"),this.xhr.abort(),assert.equals(this.xhr.requestHeaders,{})},"sets state to DONE if sent before":function(){var e;this.xhr.open("GET","/"),this.xhr.send(),this.xhr.onreadystatechange=function(){e=this.readyState},this.xhr.abort(),assert.equals(e,sinon.FakeXMLHttpRequest.DONE)},"sets send flag to false if sent before":function(){this.xhr.open("GET","/"),this.xhr.send(),this.xhr.abort(),assert.isFalse(this.xhr.sendFlag)},"dispatches readystatechange event if sent before":function(){this.xhr.open("GET","/"),this.xhr.send(),this.xhr.onreadystatechange=sinon.stub(),this.xhr.abort(),assert(this.xhr.onreadystatechange.called)},"sets readyState to unsent if sent before":function(){this.xhr.open("GET","/"),this.xhr.send(),this.xhr.abort(),assert.equals(this.xhr.readyState,sinon.FakeXMLHttpRequest.UNSENT)},"does not dispatch readystatechange event if readyState is unsent":function(){this.xhr.onreadystatechange=sinon.stub(),this.xhr.abort(),assert.isFalse(this.xhr.onreadystatechange.called)},"does not dispatch readystatechange event if readyState is opened but not sent":function(){this.xhr.open("GET","/"),this.xhr.onreadystatechange=sinon.stub(),this.xhr.abort(),assert.isFalse(this.xhr.onreadystatechange.called)}},responseXML:{setUp:function(){this.xhr=new sinon.FakeXMLHttpRequest},"is initially null":function(){this.xhr.open("GET","/"),assert.isNull(this.xhr.responseXML)},"is null when the response body is empty":function(){this.xhr.open("GET","/"),this.xhr.send(),this.xhr.respond(200,{},""),assert.isNull(this.xhr.responseXML)},"parses XML for application/xml":function(){this.xhr.open("GET","/"),this.xhr.send(),this.xhr.respond(200,{"Content-Type":"application/xml"},"<div><h1>Hola!</h1></div>");var e=this.xhr.responseXML,t=e.documentElement.getElementsByTagName("h1");assert.equals(t.length,1),assert.equals(t[0].tagName,"h1")},"parses XML for text/xml":function(){this.xhr.open("GET","/"),this.xhr.send(),this.xhr.respond(200,{"Content-Type":"text/xml"},"<div><h1>Hola!</h1></div>"),refute.isNull(this.xhr.responseXML)},"parses XML for custom xml content type":function(){this.xhr.open("GET","/"),this.xhr.send(),this.xhr.respond(200,{"Content-Type":"application/text+xml"},"<div><h1>Hola!</h1></div>"),refute.isNull(this.xhr.responseXML)},"parses XML with no Content-Type":function(){this.xhr.open("GET","/"),this.xhr.send(),this.xhr.respond(200,{},"<div><h1>Hola!</h1></div>");var e=this.xhr.responseXML,t=e.documentElement.getElementsByTagName("h1");assert.equals(t.length,1),assert.equals(t[0].tagName,"h1")},"does not parse XML with Content-Type text/plain":function(){this.xhr.open("GET","/"),this.xhr.send(),this.xhr.respond(200,{"Content-Type":"text/plain"},"<div></div>"),assert.isNull(this.xhr.responseXML)},"does not parse XML with Content-Type text/plain if sync":function(){this.xhr.open("GET","/",!1),this.xhr.send(),this.xhr.respond(200,{"Content-Type":"text/plain"},"<div></div>"),assert.isNull(this.xhr.responseXML)}},"stub XHR":{setUp:r,tearDown:i,"returns FakeXMLHttpRequest constructor":function(){assert.same(this.fakeXhr,sinon.FakeXMLHttpRequest)},"temporarily blesses FakeXMLHttpRequest with restore method":function(){assert.isFunction(this.fakeXhr.restore)},"calling restore removes temporary method":function(){this.fakeXhr.restore(),refute.defined(this.fakeXhr.restore)},"removes XMLHttpRequest onCreate listener":function(){sinon.FakeXMLHttpRequest.onCreate=function(){},this.fakeXhr.restore(),refute.defined(sinon.FakeXMLHttpRequest.onCreate)},"optionally keeps XMLHttpRequest onCreate listener":function(){var e=function(){};sinon.FakeXMLHttpRequest.onCreate=e,this.fakeXhr.restore(!0),assert.same(sinon.FakeXMLHttpRequest.onCreate,e)}},filtering:{setUp:function(){sinon.FakeXMLHttpRequest.useFilters=!0,sinon.FakeXMLHttpRequest.filters=[],sinon.useFakeXMLHttpRequest()},tearDown:function(){sinon.FakeXMLHttpRequest.useFilters=!1,sinon.FakeXMLHttpRequest.restore(),sinon.FakeXMLHttpRequest.defake.restore&&sinon.FakeXMLHttpRequest.defake.restore()},"does not defake XHR requests that don't match a filter":function(){sinon.stub(sinon.FakeXMLHttpRequest,"defake"),sinon.FakeXMLHttpRequest.addFilter(function(){return!1}),(new XMLHttpRequest).open("GET","http://example.com"),refute(sinon.FakeXMLHttpRequest.defake.called)},"defakes XHR requests that match a filter":function(){sinon.stub(sinon.FakeXMLHttpRequest,"defake"),sinon.FakeXMLHttpRequest.addFilter(function(){return!0}),(new XMLHttpRequest).open("GET","http://example.com"),assert(sinon.FakeXMLHttpRequest.defake.calledOnce)}},"defaked XHR":{setUp:function(){this.fakeXhr=new sinon.FakeXMLHttpRequest},"updates attributes from working XHR object when ready state changes":function(){var e,t,n=function(){e=this,this.addEventListener=function(e,n){t=n},this.open=function(){}},r=this.fakeXhr;s(n,function(){sinon.FakeXMLHttpRequest.defake(r,[]),e.statusText="This is the status text of the real XHR",e.readyState=4,t(),assert.equals(r.statusText,"This is the status text of the real XHR")})},"passes on methods to working XHR object":function(){var e,t,n=function(){e=this,this.addEventListener=this.open=function(){}},r=this.fakeXhr;s(n,function(){sinon.FakeXMLHttpRequest.defake(r,[]),e.getResponseHeader=t=sinon.spy(),r.getResponseHeader(),assert(t.calledOnce)})},"calls legacy onreadystatechange handlers with target set to fakeXHR":function(){var e,t,n,r=function(){e=this,this.addEventListener=function(e,t){n=t},this.open=function(){}},i=this.fakeXhr;s(r,function(){sinon.FakeXMLHttpRequest.defake(i,[]),i.onreadystatechange=t=sinon.spy(),n(),assert(t.calledOnce),assert.isObject(t.args[0][0]),assert.equals(t.args[0][0].target,i)})},"performs initial readystatechange on opening when filters are being used, but don't match":function(){try{sinon.FakeXMLHttpRequest.useFilters=!0;var e=sinon.spy();this.fakeXhr.addEventListener("readystatechange",e),this.fakeXhr.open("GET","http://example.com",!0),assert(e.calledOnce)}finally{sinon.FakeXMLHttpRequest.useFilters=!1}}},"defaked XHR filters":{setUp:function(){sinon.FakeXMLHttpRequest.useFilters=!0,sinon.FakeXMLHttpRequest.filters=[],sinon.useFakeXMLHttpRequest(),sinon.FakeXMLHttpRequest.addFilter(function(){return!0})},tearDown:function(){sinon.FakeXMLHttpRequest.useFilters=!1,sinon.FakeXMLHttpRequest.filters=[],sinon.FakeXMLHttpRequest.restore()},"loads resource asynchronously":function(e){var t=new XMLHttpRequest;t.onreadystatechange=function(){this.readyState==4&&(assert.match(this.responseText,/loaded successfully/),e())},t.open("GET","/test/resources/xhr_target.txt",!0),t.send()},"loads resource synchronously":function(){var e=new XMLHttpRequest;e.open("GET","/test/resources/xhr_target.txt",!1),e.send(),assert.match(e.responseText,/loaded successfully/)}},"missing ActiveXObject":{requiresSupportFor:{"no ActiveXObject":typeof ActiveXObject=="undefined"},setUp:r,tearDown:i,"does not expose ActiveXObject":function(){assert.equals(typeof ActiveXObject,"undefined")},"does not expose ActiveXObject when restored":function(){this.fakeXhr.restore(),assert.equals(typeof ActiveXObject,"undefined")}},"native ActiveXObject":{requiresSupportFor:{ActiveXObject:typeof ActiveXObject!="undefined"},setUp:r,tearDown:i,"hijacks ActiveXObject":function(){refute.same(e.ActiveXObject,n),refute.same(window.ActiveXObject,n),refute.same(ActiveXObject,n)},"restores global ActiveXObject":function(){this.fakeXhr.restore(),assert.same(e.ActiveXObject,n),assert.same(window.ActiveXObject,n),assert.same(ActiveXObject,n)},"creates FakeXHR object with ActiveX Microsoft.XMLHTTP":function(){var e=new ActiveXObject("Microsoft.XMLHTTP");assert(e instanceof sinon.FakeXMLHttpRequest)},"creates FakeXHR object with ActiveX Msxml2.XMLHTTP":function(){var e=new ActiveXObject("Msxml2.XMLHTTP");assert(e instanceof sinon.FakeXMLHttpRequest)},"creates FakeXHR object with ActiveX Msxml2.XMLHTTP.3.0":function(){var e=new ActiveXObject("Msxml2.XMLHTTP.3.0");assert(e instanceof sinon.FakeXMLHttpRequest)},"creates FakeXHR object with ActiveX Msxml2.XMLHTTP.6.0":function(){var e=new ActiveXObject("Msxml2.XMLHTTP.6.0");assert(e instanceof sinon.FakeXMLHttpRequest)}},"missing native XHR":{requiresSupportFor:{"no native XHR":typeof XMLHttpRequest=="undefined"},setUp:r,tearDown:i,"does not expose XMLHttpRequest":function(){assert.equals(typeof XMLHttpRequest,"undefined")},"does not expose XMLHttpRequest after restore":function(){this.fakeXhr.restore(),assert.equals(typeof XMLHttpRequest,"undefined")}},"native XHR":{requiresSupportFor:{XHR:typeof XMLHttpRequest!="undefined"},setUp:r,tearDown:i,"replaces global XMLHttpRequest":function(){refute.same(XMLHttpRequest,t),assert.same(XMLHttpRequest,sinon.FakeXMLHttpRequest)},"restores global XMLHttpRequest":function(){this.fakeXhr.restore(),assert.same(XMLHttpRequest,t)}},"progress events":{setUp:function(){this.xhr=new sinon.FakeXMLHttpRequest,this.xhr.open("GET","/some/url")},"triggers 'loadstart' event on #send":function(e){this.xhr.addEventListener("loadstart",function(){assert(!0),e()}),this.xhr.send()},"triggers 'loadstart' with event target set to the XHR object":function(e){var t=this.xhr;this.xhr.addEventListener("loadstart",function(n){assert.same(t,n.target),e()}),this.xhr.send()},"calls #onloadstart on #send":function(e){this.xhr.onloadstart=function(){assert(!0),e()},this.xhr.send()},"triggers 'load' event on success":function(e){var t=this.xhr;this.xhr.addEventListener("load",function(){assert.equals(t.readyState,sinon.FakeXMLHttpRequest.DONE),refute.equals(t.status,0),e()}),this.xhr.send(),this.xhr.respond(200,{},"")},"triggers 'load' with event target set to the XHR object":function(e){var t=this.xhr;this.xhr.addEventListener("load",function(n){assert.same(t,n.target),e()}),this.xhr.send(),this.xhr.respond(200,{},"")},"calls #onload on success":function(e){var t=this.xhr;this.xhr.onload=function(){assert.equals(t.readyState,sinon.FakeXMLHttpRequest.DONE),refute.equals(t.status,0),e()},this.xhr.send(),this.xhr.respond(200,{},"")},"triggers 'abort' event on cancel":function(e){var t=this.xhr;this.xhr.addEventListener("abort",function(){assert.equals(t.readyState,sinon.FakeXMLHttpRequest.UNSENT),assert.equals(t.status,0),e()}),this.xhr.send(),this.xhr.abort()},"triggers 'abort' with event target set to the XHR object":function(e){var t=this.xhr;this.xhr.addEventListener("abort",function(n){assert.same(t,n.target),e()}),this.xhr.send(),this.xhr.abort()},"calls #onabort on cancel":function(e){var t=this.xhr;this.xhr.onabort=function(){assert.equals(t.readyState,sinon.FakeXMLHttpRequest.UNSENT),assert.equals(t.status,0),e()},this.xhr.send(),this.xhr.abort()},"triggers 'loadend' event at the end":function(e){this.xhr.addEventListener("loadend",function(){assert(!0),e()}),this.xhr.send(),this.xhr.respond(403,{},"")},"triggers 'loadend' with event target set to the XHR object":function(e){var t=this.xhr;this.xhr.addEventListener("loadend",function(n){assert.same(t,n.target),e()}),this.xhr.send(),this.xhr.respond(200,{},"")},"calls #onloadend at the end":function(e){this.xhr.onloadend=function(){assert(!0),e()},this.xhr.send(),this.xhr.respond(403,{},"")}},"xhr.upload":{setUp:function(){this.xhr=new sinon.FakeXMLHttpRequest,this.xhr.open("POST","/some/url",!0)},"progress event is triggered with xhr.uploadProgress({loaded: 20, total: 100})":function(e){this.xhr.upload.addEventListener("progress",function(t){assert.equals(t.total,100),assert.equals(t.loaded,20),e()}),this.xhr.uploadProgress({total:100,loaded:20})},"triggers 'load' event on success":function(e){var t=this.xhr;this.xhr.upload.addEventListener("load",function(){assert.equals(t.readyState,sinon.FakeXMLHttpRequest.DONE),refute.equals(t.status,0),e()}),this.xhr.send(),this.xhr.respond(200,{},"")},"fires event with 100% progress on 'load'":function(e){this.xhr.upload.addEventListener("progress",function(t){assert.equals(t.total,100),assert.equals(t.loaded,100),e()}),this.xhr.send(),this.xhr.respond(200,{},"")},"calls 'abort' on cancel":function(e){var t=this.xhr;this.xhr.upload.addEventListener("abort",function(){assert.equals(t.readyState,sinon.FakeXMLHttpRequest.UNSENT),assert.equals(t.status,0),e()}),this.xhr.send(),this.xhr.abort()},"error event is triggered with xhr.uploadError(new Error('foobar'))":function(e){this.xhr.upload.addEventListener("error",function(t){assert.equals(t.detail.message,"foobar"),e()}),this.xhr.uploadError(new Error("foobar"))},"event listeners can be removed":function(){var e=function(){};this.xhr.upload.addEventListener("load",e),this.xhr.upload.removeEventListener("load",e),assert.equals(this.xhr.upload.eventListeners.load.length,0)}}})})(this);