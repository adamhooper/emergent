/**
 * The Sinon "server" mimics a web server that receives requests from
 * sinon.FakeXMLHttpRequest and provides an API to respond to those requests,
 * both synchronously and asynchronously. To respond synchronuously, canned
 * answers have to be provided upfront.
 *
 * @author Christian Johansen (christian@cjohansen.no)
 * @license BSD
 *
 * Copyright (c) 2010-2013 Christian Johansen
 */

if(typeof sinon=="undefined")var sinon={};sinon.fakeServer=function(){function t(){}function n(e){return t.prototype=e,new t}function r(e){var t=e;Object.prototype.toString.call(e)!="[object Array]"&&(t=[200,{},e]);if(typeof t[2]!="string")throw new TypeError("Fake server response body should be string, but was "+typeof t[2]);return t}function o(e,t,n){var r=e.method,i=!r||r.toLowerCase()==t.toLowerCase(),s=e.url,o=!s||s==n||typeof s.test=="function"&&s.test(n);return i&&o}function u(e,t){var n=t.url;if(!/^https?:\/\//.test(n)||s.test(n))n=n.replace(s,"");if(o(e,this.getHTTPMethod(t),n)){if(typeof e.response=="function"){var r=e.url,i=[t].concat(r&&typeof r.exec=="function"?r.exec(n).slice(1):[]);return e.response.apply(e,i)}return!0}return!1}function a(e,t){var n;n="Request:\n"+sinon.format(t)+"\n\n",n+="Response:\n"+sinon.format(e)+"\n\n",sinon.log(n)}var e=[].push,i=typeof window!="undefined"?window.location:{},s=new RegExp("^"+i.protocol+"//"+i.host);return{create:function(){var e=n(this);return this.xhr=sinon.useFakeXMLHttpRequest(),e.requests=[],this.xhr.onCreate=function(t){e.addRequest(t)},e},addRequest:function(n){var r=this;e.call(this.requests,n),n.onSend=function(){r.handleRequest(this),r.autoRespond&&!r.responding&&(setTimeout(function(){r.responding=!1,r.respond()},r.autoRespondAfter||10),r.responding=!0)}},getHTTPMethod:function(t){if(this.fakeHTTPMethods&&/post/i.test(t.method)){var n=(t.requestBody||"").match(/_method=([^\b;]+)/);return n?n[1]:t.method}return t.method},handleRequest:function(n){n.async?(this.queue||(this.queue=[]),e.call(this.queue,n)):this.processRequest(n)},respondWith:function(n,i,s){if(arguments.length==1&&typeof n!="function"){this.response=r(n);return}this.responses||(this.responses=[]),arguments.length==1&&(s=n,i=n=null),arguments.length==2&&(s=i,i=n,n=null),e.call(this.responses,{method:n,url:i,response:typeof s=="function"?s:r(s)})},respond:function(){arguments.length>0&&this.respondWith.apply(this,arguments);var t=this.queue||[],n=t.splice(0,t.length),r;while(r=n.shift())this.processRequest(r)},processRequest:function(t){try{if(t.aborted)return;var n=this.response||[404,{},""];if(this.responses)for(var r=this.responses.length,i=r-1;i>=0;i--)if(u.call(this,this.responses[i],t)){n=this.responses[i].response;break}t.readyState!=4&&(a(n,t),t.respond(n[0],n[1],n[2]))}catch(s){sinon.logError("Fake server request processing",s)}},restore:function(){return this.xhr.restore&&this.xhr.restore.apply(this.xhr,arguments)}}}(),typeof module!="undefined"&&module.exports&&(module.exports=sinon);