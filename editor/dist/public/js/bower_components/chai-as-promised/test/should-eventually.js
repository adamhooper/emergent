(function(){describe("Fulfillment value assertions:",function(e){return function(){var e;return e=null,describe("Direct tests of fulfilled promises:",function(){return describe("Basics:",function(){return it(".eventually.equal(42)",function(e){return fulfilledPromise(42).should.eventually.equal(42).notify(e)}),it(".eventually.be.arguments",function(e){return fulfilledPromise(arguments).should.eventually.be.arguments.notify(e)}),it(".eventually.be.empty",function(e){return fulfilledPromise([]).should.eventually.be.empty.notify(e)}),it(".eventually.exist",function(e){return fulfilledPromise(!0).should.eventually.exist.notify(e)}),it(".eventually.be.false",function(e){return fulfilledPromise(!1).should.eventually.be["false"].notify(e)}),it(".eventually.be.ok",function(e){return fulfilledPromise({}).should.eventually.be.ok.notify(e)}),it(".eventually.be.true",function(e){return fulfilledPromise(!0).should.eventually.be["true"].notify(e)}),it(".become(true)",function(e){return fulfilledPromise(!0).should.become(!0).notify(e)})}),describe("With flags and chainable methods involved:",function(){return it(".not.eventually.be.ok",function(e){return fulfilledPromise(!1).should.not.eventually.be.ok.notify(e)}),it(".eventually.not.be.ok",function(e){return fulfilledPromise(!1).should.eventually.not.be.ok.notify(e)}),it(".eventually.deep.equal({ foo: 'bar' })",function(e){return fulfilledPromise({foo:"bar"}).should.eventually.deep.equal({foo:"bar"}).notify(e)}),it(".not.eventually.deep.equal({ foo: 'bar' })",function(e){return fulfilledPromise({foo:"baz"}).should.not.eventually.deep.equal({foo:"bar"}).notify(e)}),it(".eventually.not.deep.equal({ foo: 'bar' })",function(e){return fulfilledPromise({foo:"baz"}).should.eventually.not.deep.equal({foo:"bar"}).notify(e)}),it(".eventually.have.deep.property('foo.bar')",function(e){return fulfilledPromise({foo:{bar:"baz"}}).should.eventually.have.deep.property("foo.bar","baz").notify(e)}),it(".eventually.contain('foo')",function(e){return fulfilledPromise(["foo","bar"]).should.eventually.contain("foo").notify(e)}),it(".not.eventually.contain('foo')",function(e){return fulfilledPromise(["bar","baz"]).should.not.eventually.contain("foo").notify(e)}),it(".eventually.not.contain('foo')",function(e){return fulfilledPromise(["bar","baz"]).should.eventually.not.contain("foo").notify(e)}),it(".eventually.contain.keys('foo')",function(e){return fulfilledPromise({foo:"bar",baz:"quux"}).should.eventually.contain.keys("foo").notify(e)}),it(".not.eventually.contain.keys('foo')",function(e){return fulfilledPromise({baz:"quux"}).should.not.eventually.contain.keys("foo").notify(e)}),it(".eventually.not.contain.keys('foo')",function(e){return fulfilledPromise({baz:"quux"}).should.eventually.not.contain.keys("foo").notify(e)}),it(".eventually.be.an.instanceOf(Array)",function(e){return fulfilledPromise([]).should.eventually.be.an.instanceOf(Array).notify(e)})})}),describe("Chaining:",function(){return it(".eventually.be.ok.and.equal(42)",function(e){return fulfilledPromise(42).should.eventually.be.ok.and.equal(42).notify(e)}),it(".rejected.and.notify(done)",function(e){return rejectedPromise().should.be.rejected.and.notify(e)}),it(".fulfilled.and.notify(done)",function(e){return fulfilledPromise().should.be.fulfilled.and.notify(e)})}),describe("On a promise fulfilled with the number 42:",function(){return beforeEach(function(){return e=fulfilledPromise(42)}),describe(".eventually.equal(42)",function(){return shouldPass(function(){return e.should.eventually.equal(42)})}),describe(".eventually.eql(42)",function(){return shouldPass(function(){return e.should.eventually.eql(42)})}),describe(".eventually.be.below(9000)",function(){return shouldPass(function(){return e.should.eventually.be.below(9e3)})}),describe(".eventually.be.a('number')",function(){return shouldPass(function(){return e.should.eventually.be.a("number")})}),describe(".eventually.be.an.instanceOf(String)",function(){return shouldFail({op:function(){return e.should.eventually.be.an.instanceOf(String)},message:"42 to be an instance of String"})}),describe(".eventually.be.false",function(){return shouldFail({op:function(){return e.should.eventually.be["false"]},message:"to be false"})}),describe(".eventually.be.an('object')",function(){return shouldFail({op:function(){return e.should.eventually.be.an("object")},message:"to be an object"})})}),describe("On a promise fulfilled with { foo: 'bar' }:",function(){return beforeEach(function(){return e=fulfilledPromise({foo:"bar"})}),describe(".eventually.equal({ foo: 'bar' })",function(){return shouldFail({op:function(){return e.should.eventually.equal({foo:"bar"})},message:"to equal { foo: 'bar' }"})}),describe(".eventually.eql({ foo: 'bar' })",function(){return shouldPass(function(){return e.should.eventually.eql({foo:"bar"})})}),describe(".eventually.deep.equal({ foo: 'bar' })",function(){return shouldPass(function(){return e.should.eventually.deep.equal({foo:"bar"})})}),describe(".eventually.not.deep.equal({ foo: 'bar' })",function(){return shouldFail({op:function(){return e.should.eventually.not.deep.equal({foo:"bar"})},message:"not deeply equal { foo: 'bar' }"})}),describe(".eventually.deep.equal({ baz: 'quux' })",function(){return shouldFail({op:function(){return e.should.eventually.deep.equal({baz:"quux"})},message:"deeply equal { baz: 'quux' }"})}),describe(".eventually.not.deep.equal({ baz: 'quux' })",function(){return shouldPass(function(){return e.should.eventually.not.deep.equal({baz:"quux"})})}),describe(".become({ foo: 'bar' })",function(){return shouldPass(function(){return e.should.become({foo:"bar"})})}),describe(".not.become({ foo: 'bar' })",function(){return shouldFail({op:function(){return e.should.not.become({foo:"bar"})},message:"deeply equal { foo: 'bar' }"})}),describe(".eventually.have.property('foo').that.equals('bar')",function(){return shouldPass(function(){return e.should.eventually.have.property("foo").that.equals("bar")})})})}}(this))}).call(this);