(function(e){typeof require=="function"&&typeof exports=="object"&&typeof module=="object"?module.exports=e:typeof define=="function"&&define.amd?define(["jquery"],function(t){return function(n,r){return e(n,r,t)}}):chai.use(function(t,n){return e(t,n,jQuery)})})(function(e,t,n){var r=t.inspect,i=t.flag;n=n||jQuery;var s="__proto__"in Object?function(e,t){e.__proto__=t}:function(e,t){function r(e,t){Object.getOwnPropertyNames(t).forEach(function(r){n.test(r)||Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}var n=/^(?:length|name|arguments|caller)$/;r(e,t),r(e,Object.getPrototypeOf(t))};n.fn.inspect=function(e){var t=n("<div />").append(this.clone());if(e!==undefined){var r=t.children();while(e-->0)r=r.children();r.html("...")}return t.html()};var o={attr:"attribute",css:"CSS property",prop:"property"};for(var u in o)(function(t,n){e.Assertion.addMethod(t,function(e,s){var o=i(this,"object")[t](e);(!i(this,"negate")||undefined===s)&&this.assert(undefined!==o,"expected #{this} to have a #{exp} "+n,"expected #{this} not to have a #{exp} "+n,e),undefined!==s&&this.assert(s===o,"expected #{this} to have a "+r(e)+" "+n+" with the value #{exp}, but the value was #{act}","expected #{this} not to have a "+r(e)+" "+n+" with the value #{act}",s,o),i(this,"object",o)})})(u,o[u]);e.Assertion.addMethod("data",function(t,n){if(i(this,"negate")&&undefined!==n&&undefined===i(this,"object").data(t))return;var r=new e.Assertion(i(this,"object").data());return i(this,"negate")&&(r=r.not),r.property(t,n)}),e.Assertion.addMethod("class",function(e){this.assert(i(this,"object").hasClass(e),"expected #{this} to have class #{exp}","expected #{this} not to have class #{exp}",e)}),e.Assertion.addMethod("id",function(e){this.assert(i(this,"object").attr("id")===e,"expected #{this} to have id #{exp}","expected #{this} not to have id #{exp}",e)}),e.Assertion.addMethod("html",function(e){var t=i(this,"object").html();this.assert(t===e,"expected #{this} to have HTML #{exp}, but the HTML was #{act}","expected #{this} not to have HTML #{exp}",e,t)}),e.Assertion.addMethod("text",function(e){var t=i(this,"object").text();this.assert(t===e,"expected #{this} to have text #{exp}, but the text was #{act}","expected #{this} not to have text #{exp}",e,t)}),e.Assertion.addMethod("value",function(e){var t=i(this,"object").val();this.assert(i(this,"object").val()===e,"expected #{this} to have value #{exp}, but the value was #{act}","expected #{this} not to have value #{exp}",e,t)}),n.each(["visible","hidden","selected","checked","enabled","disabled"],function(t,n){e.Assertion.addProperty(n,function(){this.assert(i(this,"object").is(":"+n),"expected #{this} to be "+n,"expected #{this} not to be "+n)})}),e.Assertion.overwriteProperty("exist",function(e){return function(){var t=i(this,"object");t instanceof n?this.assert(t.length>0,"expected "+r(t.selector)+" to exist","expected "+r(t.selector)+" not to exist"):e.apply(this,arguments)}}),e.Assertion.overwriteProperty("empty",function(e){return function(){var t=i(this,"object");t instanceof n?this.assert(t.is(":empty"),"expected #{this} to be empty","expected #{this} not to be empty"):e.apply(this,arguments)}}),e.Assertion.overwriteProperty("be",function(e){return function(){var t=function(t){var r=i(this,"object");r instanceof n?this.assert(r.is(t),"expected #{this} to be #{exp}","expected #{this} not to be #{exp}",t):e.apply(this,arguments)};return s(t,this),t}}),e.Assertion.overwriteMethod("match",function(e){return function(t){var r=i(this,"object");r instanceof n?this.assert(r.is(t),"expected #{this} to match #{exp}","expected #{this} not to match #{exp}",t):e.apply(this,arguments)}}),e.Assertion.overwriteProperty("contain",function(e){return function(){e.call(this);var t=function(t){var r=i(this,"object");if(!(r instanceof n))return Function.prototype.apply.call(e.call(this),this,arguments);this.assert(r.is(":contains('"+t+"')"),"expected #{this} to contain #{exp}","expected #{this} not to contain #{exp}",t)};return s(t,this),t}}),e.Assertion.overwriteProperty("have",function(e){return function(){var t=i(this,"object");if(t instanceof n){var r=function(e){this.assert(t.find(e).length>0,"expected #{this} to have #{exp}","expected #{this} not to have #{exp}",e)};return s(r,this),r}e.call(this)}})});